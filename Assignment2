{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled2.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNYcuaPcULCOqmK3m2yBm/L",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/mehakh/mehakh/blob/main/Assignment2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "cOIqeVH8OqP7",
        "outputId": "0f955a39-73eb-4be1-a855-b4687117ccf8"
      },
      "source": [
        "import numpy as np\n",
        "\n",
        "#  matrix= ([[1,-2,3,4,11],\n",
        "#          [1,0,-1,1,-4],\n",
        " #         [2,-2,2,5,7],\n",
        " #         [0,-7,3,1,3]])\n",
        "#Mehdi Akhundzada\n",
        "\n",
        "\n",
        "def gaussElimination(matrix): \n",
        "  \n",
        "\n",
        "    np.asarray(matrix)\n",
        "  \n",
        "    #print(matrix.transpose())\n",
        "\n",
        "\n",
        "    matrix = matrix.astype(float) #ensure the datatype is float\n",
        "    print  (\"the initial matrix:\")\n",
        "\n",
        "    \n",
        "    print (matrix)\n",
        "    if matrix[0,0] == 0.0:\n",
        "        raise Exception(\"First row should contain non zero elements\")\n",
        "    n,m = matrix.shape\n",
        "    print (\"row:\",n,\"column:\",m)\n",
        "    #start the elimination phase\n",
        "    for i in range(0,n):#row\n",
        "        for j in range(i+1,n):\n",
        "            if matrix[j,i] != 0.0:\n",
        "                print (\"using row \",i,\"as pivot and row \",j,\"as target\")\n",
        "                multiplier = matrix[j,i]/matrix[i,i]\n",
        "                #print matrix[i,k],matrix[k,k],multiplier \n",
        "                #just to verbose multiplier process\n",
        "                matrix[j,i:m]=matrix[j,i:m] - multiplier*matrix[i,i:m] \n",
        "                print (matrix)\n",
        "                \n",
        "    #start the backsubstitution phase\n",
        "    x = []\n",
        "    substractor = 0.0\n",
        "    for i in range(n-1,-1,-1): #row\n",
        "        #print (\"i\",i) #just for debugging\n",
        "        for j in range(0,n-i): #column\n",
        "         #   print (\"j\",j) #just for debugging\n",
        "            if j==0:\n",
        "                substractor = 0\n",
        "            else:\n",
        "                substractor = substractor + matrix[i,m-j-1]*x[j-1]\n",
        "        x.append((matrix[i,m-1]-substractor)/matrix[i,i])\n",
        "        print (\"x\",x)\n",
        "    return x\n",
        "\n",
        "    import gaussElimination\n",
        "import numpy as np\n",
        "\n",
        "\n",
        "a = np.array([[3, 7, 1,3,37],\n",
        " [1,-6, 6,9,11],\n",
        " [4, 4,-7,1,38],\n",
        "[-1, 3, 8,2,-1]])\n",
        "result = gaussElimination(a)\n",
        "print (\"the result is\" ,result)\n",
        "\n",
        "\n",
        "from mpl_toolkits.mplot3d import axes3d\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import math\n",
        "from matplotlib import cm\n",
        "#https://matplotlib.org/3.1.0/gallery/mplot3d/surface3d.html\n",
        "#https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.contour.html\n",
        "\n",
        "\n",
        "X = np.arange(-5,5,0.25)\n",
        "Y = np.arange(-5,5,0.25)\n",
        "XX, YY = np.meshgrid(X,Y)\n",
        "\n",
        "Z1 =(XX-1)**2+YY-10\n",
        "Z2 =XX**2+YY**2+4*XX*XX+YY-40\n",
        "#Z2 =4*XX*(math.cos(XX+YY))+XX**2+YY\n",
        "\n",
        "\n",
        "fig = plt.figure()\n",
        "ax = fig.gca(projection='3d')\n",
        "surf = ax.plot_surface(XX, YY, Z1, cmap=cm.coolwarm,\n",
        "                       alpha=0.5)\n",
        "surfZ = ax.plot_surface(XX,YY,np.zeros(np.shape(Z1)), antialiased=False, alpha=0.2)\n",
        "cp = ax.contour(X, Y, Z1, levels = 0, colors = 'red')\n",
        "plt.show()\n",
        "\n",
        "fig = plt.figure(block=False)\n",
        "ax = fig.gca(projection='3d')\n",
        "surf = ax.plot_surface(XX, YY, Z2, cmap=cm.summer,\n",
        "                       antialiased=False, alpha=0.5)\n",
        "surfZ = ax.plot_surface(XX,YY,np.zeros(np.shape(Z1)), antialiased=False, alpha=0.2)\n",
        "cp = ax.contour(X, Y, Z2, levels = 0, colors = 'green')\n",
        "plt.show()\n",
        "\n",
        "fig = plt.figure()\n",
        "ax = fig.gca()\n",
        "ax.grid(color='#C0C0C0', linestyle='-', linewidth=0.5)\n",
        "cp = ax.contour(X, Y, Z1, levels = 0, colors = 'red')\n",
        "cp = ax.contour(X, Y, Z2, levels = 0, colors = 'green')\n",
        "ax.set_aspect('equal', 'box')\n",
        "plt.show()\n",
        "\n",
        "\n",
        "\n",
        "    "
      ],
      "execution_count": 122,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "the initial matrix:\n",
            "[[ 3.  7.  1.  3. 37.]\n",
            " [ 1. -6.  6.  9. 11.]\n",
            " [ 4.  4. -7.  1. 38.]\n",
            " [-1.  3.  8.  2. -1.]]\n",
            "row: 4 column: 5\n",
            "using row  0 as pivot and row  1 as target\n",
            "[[ 3.          7.          1.          3.         37.        ]\n",
            " [ 0.         -8.33333333  5.66666667  8.         -1.33333333]\n",
            " [ 4.          4.         -7.          1.         38.        ]\n",
            " [-1.          3.          8.          2.         -1.        ]]\n",
            "using row  0 as pivot and row  2 as target\n",
            "[[  3.           7.           1.           3.          37.        ]\n",
            " [  0.          -8.33333333   5.66666667   8.          -1.33333333]\n",
            " [  0.          -5.33333333  -8.33333333  -3.         -11.33333333]\n",
            " [ -1.           3.           8.           2.          -1.        ]]\n",
            "using row  0 as pivot and row  3 as target\n",
            "[[  3.           7.           1.           3.          37.        ]\n",
            " [  0.          -8.33333333   5.66666667   8.          -1.33333333]\n",
            " [  0.          -5.33333333  -8.33333333  -3.         -11.33333333]\n",
            " [  0.           5.33333333   8.33333333   3.          11.33333333]]\n",
            "using row  1 as pivot and row  2 as target\n",
            "[[  3.           7.           1.           3.          37.        ]\n",
            " [  0.          -8.33333333   5.66666667   8.          -1.33333333]\n",
            " [  0.           0.         -11.96        -8.12       -10.48      ]\n",
            " [  0.           5.33333333   8.33333333   3.          11.33333333]]\n",
            "using row  1 as pivot and row  3 as target\n",
            "[[  3.           7.           1.           3.          37.        ]\n",
            " [  0.          -8.33333333   5.66666667   8.          -1.33333333]\n",
            " [  0.           0.         -11.96        -8.12       -10.48      ]\n",
            " [  0.           0.          11.96         8.12        10.48      ]]\n",
            "using row  2 as pivot and row  3 as target\n",
            "[[ 3.00000000e+00  7.00000000e+00  1.00000000e+00  3.00000000e+00\n",
            "   3.70000000e+01]\n",
            " [ 0.00000000e+00 -8.33333333e+00  5.66666667e+00  8.00000000e+00\n",
            "  -1.33333333e+00]\n",
            " [ 0.00000000e+00  0.00000000e+00 -1.19600000e+01 -8.12000000e+00\n",
            "  -1.04800000e+01]\n",
            " [ 0.00000000e+00  0.00000000e+00  0.00000000e+00  1.77635684e-15\n",
            "   3.55271368e-15]]\n",
            "x [2.0]\n",
            "x [2.0, -0.4816053511705687]\n",
            "x [2.0, -0.4816053511705687, 1.7525083612040133]\n",
            "x [2.0, -0.4816053511705687, 1.7525083612040133, 6.404682274247492]\n",
            "the result is [2.0, -0.4816053511705687, 1.7525083612040133, 6.404682274247492]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n",
            "  return array(a, dtype, copy=False, order=order, subok=True)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-122-47a5840f5ca0>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     89\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     90\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 91\u001b[0;31m \u001b[0mfig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mblock\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     92\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgca\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprojection\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'3d'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m surf = ax.plot_surface(XX, YY, Z2, cmap=cm.summer,\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mfigure\u001b[0;34m(num, figsize, dpi, facecolor, edgecolor, frameon, FigureClass, clear, **kwargs)\u001b[0m\n\u001b[1;32m    544\u001b[0m                                         \u001b[0mframeon\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mframeon\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    545\u001b[0m                                         \u001b[0mFigureClass\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mFigureClass\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 546\u001b[0;31m                                         **kwargs)\n\u001b[0m\u001b[1;32m    547\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    548\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mfigLabel\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/backend_bases.py\u001b[0m in \u001b[0;36mnew_figure_manager\u001b[0;34m(cls, num, *args, **kwargs)\u001b[0m\n\u001b[1;32m   3355\u001b[0m         \u001b[0;32mfrom\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mFigure\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3356\u001b[0m         \u001b[0mfig_cls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'FigureClass'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mFigure\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3357\u001b[0;31m         \u001b[0mfig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfig_cls\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3358\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnew_figure_manager_given_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3359\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mTypeError\u001b[0m: __init__() got an unexpected keyword argument 'block'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ee42ueabG4mW"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}